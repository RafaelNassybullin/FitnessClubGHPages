import React, {useState, useEffect} from "react";
import styled from 'styled-components'
import {useScrollYPosition} from 'react-use-scroll-position';
import {motion} from "framer-motion";
import {useWindowSize} from "rooks";

function Navbar(props) {
    const {innerWidth} = useWindowSize();
    const [get, setGet] = useState(false);
    const scrollY = useScrollYPosition(0);
    const [toggleNav, setToggleNav] = useState(false);
    const [lastYposOne, setLastYposOne] = useState(0);
    const [lastYpos, setLastYpos] = useState(0);
    useEffect(() => {
        function handleScroll() {
            const yPos = window.scrollY;
            const isScrongUp = yPos < lastYpos;
            setLastYposOne(isScrongUp);
            setLastYpos(yPos)
        }

        window.addEventListener('scroll', handleScroll, false);
        return () => {
            window.removeEventListener('scroll', handleScroll, false);
        }
    }, [lastYpos])

    useEffect(() => {
        scrollY > 0 ? setGet(true) : setGet(false)
    }, [scrollY])

    const animUl = {
        open: {
            left: '33%',
            color: '#000',
        },
        close: {
            left: '10%',
            color: 'inherit'
        }
    }
    const animUldestroy = {
        open: {
            left: '-6vw',
            color: 'white',
        },
        close: {
            left: '-6vw',
            color: 'white'
        }
    }
    return (
        <Header  {...props}
                 style={{
                     background: toggleNav && innerWidth < 500 ? '#FFD064' : get ? '#FFFFFF99' : 'unset',
                     backdropFilter: get ? 'saturate(180%) blur(20px)' : 'unset',
                     height: innerWidth >= 500 ? (get ? '5.75vw' : '3.750vw') : '17vw'
                 }}
                 animate={{
                     top: innerWidth < 500 ? '-1.625vw' : get ? '0' : '1.625vw',
                     y: scrollY < 700 ? '0' : lastYposOne ? '0' : innerWidth >= 500 ? '-5.75vw' : toggleNav ? '-77.6vw' : '-17.6vw',
                 }}>
            <nav>
                <Logo>
                    <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g>
                            <path
                                d="M38.1859 15.7237C38.3419 15.8797 38.5459 15.9573 38.7499 15.9573C38.9538 15.9573 39.1582 15.8793 39.3142 15.7237L44.8725 10.1653C46.4648 8.57266 46.4648 5.98099 44.8725 4.38834C43.2799 2.79532 40.6878 2.79605 39.0956 4.38834L38.7499 4.73331L38.4049 4.38834C36.8115 2.79568 34.2206 2.79568 32.6279 4.38834C31.8563 5.15994 31.4311 6.1857 31.4311 7.27664C31.4311 8.36758 31.8563 9.39371 32.6279 10.1649L38.1859 15.7237ZM33.7562 5.51663C34.2418 5.03104 34.879 4.78897 35.5162 4.78897C36.1534 4.78897 36.7914 5.0314 37.2766 5.51663L38.1859 6.4263C38.3357 6.57571 38.5385 6.65994 38.7499 6.65994C38.9615 6.65994 39.1644 6.57571 39.3142 6.4263L40.2239 5.51663C41.195 4.54507 42.7738 4.54617 43.7442 5.51663C44.7147 6.48709 44.7147 8.06656 43.7442 9.03702L38.7499 14.031L33.7562 9.03702C33.286 8.5668 33.0267 7.94131 33.0267 7.27701C33.0271 6.61197 33.286 5.98648 33.7562 5.51663Z"
                                fill="#FF2625"/>
                            <path
                                d="M46.2329 46.2799C39.4129 47.0365 34.0044 44.0167 33.9502 43.9864C33.7667 43.8816 33.5492 43.8534 33.3452 43.9094C33.2591 43.9325 24.6806 46.232 17.7713 44.6983C13.464 43.7406 9.40121 40.7066 6.43454 38.4914C6.0361 38.194 5.65854 37.9116 5.30405 37.6527C4.81992 37.2986 4.05014 37.0042 3.37155 36.7442C3.06686 36.6277 2.64938 36.4677 2.55966 36.4116C2.48203 36.3509 2.43954 36.2615 2.43954 36.1593V34.31C2.478 32.8466 8.61349 10.3294 9.56491 7.46487C9.58835 7.43118 9.6799 7.36489 9.74728 7.33303L21.8894 1.78713L25.8148 6.89761C26.0085 7.16238 25.9902 7.53262 25.7719 7.77688L21.893 12.1253C21.6392 12.4102 21.2119 12.4413 20.9467 12.2197L19.3783 10.7736C19.1944 10.6044 18.933 10.5484 18.688 10.5934C18.4422 10.6374 18.2225 10.8124 18.109 11.0351C17.9779 11.2932 16.7903 11.6096 15.5788 11.6188L15.1841 11.5789C14.8676 11.5412 14.5608 11.7063 14.4062 11.985C14.2509 12.2637 14.2773 12.6079 14.4721 12.8606C14.8091 13.296 15.0716 13.6458 15.2203 13.8465L15.9967 27.0436C15.5155 28.9179 15.0746 29.4503 14.9651 29.5569C14.6417 29.6591 14.407 29.9612 14.407 30.3179C14.407 30.7584 14.7644 31.1159 15.2049 31.1159C16.1098 31.1159 16.8789 29.9268 17.4963 27.6054C23.8424 22.8571 29.3806 27.3384 29.8149 27.7072C31.8305 29.7301 31.9554 31.0738 31.9594 31.1334C31.969 31.5656 32.3224 31.9135 32.7574 31.9135C33.198 31.9135 33.5554 31.5564 33.5554 31.1159C33.5554 30.9324 33.4887 29.3581 31.4237 27.0835C33.3712 24.6892 35.5886 23.3101 38.0308 23.0098C42.2415 22.4912 45.781 25.3228 45.8165 25.351C46.1585 25.6293 46.6602 25.578 46.9386 25.2367C47.2169 24.8958 47.1667 24.3941 46.8261 24.1154C46.6613 23.981 42.7433 20.829 37.8521 21.4241C34.9931 21.7709 32.4267 23.317 30.2144 26.0233C28.4189 24.8024 23.2707 22.039 17.5132 25.6531L16.799 13.5165C16.7917 13.3854 16.7514 13.2583 16.683 13.1466C17.3971 13.062 18.2474 12.8756 18.8641 12.4699L19.8921 13.4173C20.849 14.2204 22.2505 14.1204 23.0832 13.188L26.9621 8.83926C27.6777 8.03762 27.7374 6.82546 27.0918 5.94143L22.7675 0.311669C22.542 0.0176013 22.1428 -0.0823742 21.8033 0.0721667L9.09396 5.87734C8.96103 5.93557 8.28683 6.26186 8.06528 6.92837C7.61337 8.28481 0.843964 32.4265 0.843964 34.3074V36.1597C0.843964 36.7541 1.11093 37.3037 1.57565 37.6681C1.8082 37.8501 2.15573 37.9878 2.80136 38.2346C3.3287 38.4368 4.05051 38.7125 4.36215 38.9407C4.71298 39.197 5.08578 39.4757 5.47983 39.7702C8.56222 42.0722 12.7835 45.2245 17.4256 46.2561C24.0339 47.7246 31.7913 45.9492 33.4539 45.5303C34.5643 46.1041 38.638 48 43.9712 48C44.7581 48 45.573 47.959 46.409 47.8656C46.847 47.8173 47.1623 47.4225 47.114 46.9849C47.0649 46.5462 46.669 46.2283 46.2329 46.2799Z"
                                fill="#3A1212"/>
                            <path
                                d="M42.3249 36.6121C42.2809 36.2129 41.9429 35.9023 41.5316 35.9023C41.0911 35.9023 40.7337 36.2598 40.7337 36.7003C40.7337 37.2332 41.1274 39.0375 46.1877 39.8805C46.232 39.8878 46.2763 39.8915 46.3195 39.8915C46.7026 39.8915 47.0406 39.615 47.1058 39.225C47.1779 38.7903 46.8842 38.3794 46.4499 38.3065C42.9112 37.7169 42.3721 36.7183 42.3249 36.6121Z"
                                fill="#FF2625"/>
                            <path
                                d="M27.006 40.7073C16.5562 42.9456 12.0844 35.7957 11.8995 35.4906C11.6713 35.1138 11.1824 34.9926 10.8056 35.2189C10.4277 35.4456 10.3054 35.9356 10.532 36.3135C10.5848 36.401 11.8544 38.4852 14.5691 40.2605C16.4398 41.4833 19.2922 42.7292 23.1502 42.7292C24.4352 42.7292 25.8316 42.5911 27.34 42.2681C27.7711 42.1758 28.0457 41.7514 27.9534 41.3207C27.8608 40.8901 27.4371 40.6143 27.006 40.7073Z"
                                fill="#FF2625"/>
                        </g>
                        <defs>
                            <clipPath id="clip0">
                                <rect width="48" height="48" fill="white"/>
                            </clipPath>
                        </defs>
                    </svg>
                </Logo>
                {toggleNav && <motion.ul variants={innerWidth >= 500 ? animUl : animUldestroy}
                                         animate={get ? 'open' : 'close'}>
                    <li>home</li>
                    <li>training</li>
                    <li>contact</li>
                </motion.ul>}
                <Burger {...props} animate={{
                    borderRadius: scrollY > 300 ? '50%' : '0',
                }}
                        onClick={() => setToggleNav(!toggleNav)}
                >

                    {!toggleNav?<svg width={'2vw'} fill={'#FFD064'} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 136.07 89.16">
                        <path
                              d="M67.51,52.14H11a35.56,35.56,0,0,1-4-.06c-4.25-.46-7.23-3.63-7-7.64.24-4.24,2.63-6.72,6.82-7.32a28,28,0,0,1,4-.08H125.29c.84,0,1.67,0,2.5,0,5.06.22,8.22,3.08,8.27,7.45s-3.1,7.4-8.08,7.64c-1.49.08-3,0-4.49,0Z"/>
                        <path
                              d="M67.52,15.14H11.05a37.91,37.91,0,0,1-4-.05c-4.25-.46-7.24-3.63-7-7.64C.26,3.2,2.64.72,6.84.11a29.47,29.47,0,0,1,4-.08H125.28c.66,0,1.33,0,2,0C132.72.17,136,3,136.06,7.47s-3.22,7.49-8.57,7.66c-1.66,0-3.33,0-5,0Z"/>
                        <path
                              d="M68.54,74H125c1.16,0,2.33-.06,3.49,0,4.6.36,7.63,3.45,7.56,7.66-.07,4-3,7-7.31,7.39-1,.1-2,0-3,0H9.81C3.51,89.08.08,86.48,0,81.7S3.38,74.09,9.57,74h59Z"/>
                    </svg>:<svg width={'2vw'} fill={'#FFD064'} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100.36 100.57">

                        <path
                              d="M40.27,50.55C28.19,38.56,17,27.43,5.76,16.28a49,49,0,0,1-3.8-4C-.7,9-.66,5.53,2.14,2.36s7-3.17,10.29-.23,6.2,6.05,9.26,9.11C29.94,19.48,38.3,27.62,46.37,36c2.81,2.92,4.57,3.21,7.56.13C64.47,25.27,75.27,14.63,86.06,4,87.55,2.51,89.58.5,91.28.57c2.65.11,6.47,1.1,7.53,3a9.54,9.54,0,0,1-.46,8.5c-3.16,4.42-7.49,8-11.37,11.89-8.59,8.59-17.21,17.15-26.21,26.12,1.43,1.53,2.6,2.84,3.84,4.08C75.2,64.75,85.83,75.33,96.38,86a13.82,13.82,0,0,1,3.51,4.75c1.09,3.23.32,6.38-2.75,8.34-3.6,2.29-7,1.57-9.93-1.39-11-10.94-22-21.78-32.83-32.9-3.12-3.22-5-3.54-8.28-.12-10.74,11.17-21.84,22-32.79,32.94-2.94,2.94-6.68,4.21-9.77,1.4C1.6,97.24.71,93.64.6,90.82c-.06-1.65,2.18-3.57,3.67-5.08Q19.75,70.11,35.36,54.63C36.65,53.34,38.17,52.29,40.27,50.55Z"/>
                    </svg>}


                </Burger>
            </nav>
        </Header>
    );
}

export default Navbar
//====================Styled-Components=========================>

const Logo = styled.div`
  color: #792929;
  width: 3.000vw;
  height: 3.000vw;
  font-size: 25px;
  display: flex;
  align-items: center;
  justify-content: center;
  svg{
    
  }
  @media (max-width: 433px) {
    width: 12.000vw;
    height: 12.000vw;
  }
`
export const Burger = styled(motion.div)`
  width: 2.875vw;
  height: 2.875vw;
  background: #3A1212;
  border-radius: 50%;
  cursor: pointer;
  display:flex;
  align-items:center;
  justify-content:center;
  svg{
    
    @media(max-width: 433px){
        width: 5vw;
    }
  }
  @media (max-width: 433px) {
    width: 8vw;
    height: 8vw;
    
  }
`
const Header = styled(motion.header)`
  width: 100%;
  display: flex;
  align-items: center;
  position: fixed;
  height: 3.750vw;
  z-index: 999;
  left: 0;
  @media (max-width: 433px) {
    height: 16vw;

  }

  nav {
    width: 73.125vw;
    margin: 0 auto;
    font-size: 1.875vw;
    display: flex;
    justify-content: space-between;
    position: relative;
    @media (max-width: 433px) {
      align-items: center;
      width: 87.125vw;
    }

    ul {
      display: flex;
      position: absolute;
      top: 0;
      height: 100%;
      background: transparent;
      left: 10%;
      align-items: center;
      z-index: 6;
      @media (max-width: 433px) {
        top: 14vw;
        left: 0;
        justify-content: space-between;
        flex-direction: column;
        width: 100vw;
        height: 60vw;
        font-size: 10vw;
        background: #FFD064;
        color: white;
      }

      li {
        margin: 0 1.938vw;
        text-transform: capitalize;
        cursor: pointer;
        border-bottom: 0.250vw solid transparent;
        font-family: Alegreya-Regular, sans-serif;

        &:hover {
          color: #3A1212;
          border-bottom: 0.250vw solid #FF2625;
        }
      }
    }
  }

`